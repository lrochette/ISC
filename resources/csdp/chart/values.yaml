gitops-runtime:
  global:
    codefresh:
      accountId: 600edc0bdffeb2bc4981d15a
      userToken:
        secretKeyRef:
          name: codefresh-user-token
          key: token
    runtime:
      ingress:
        className: nginx
        enabled: true
        hosts:
          - lrcsdp.support.cf-cd.com
      name: csdp
    app-proxy:
      config:
        logLevel: trace
        graphqlPlayground: true
  installer:
    skipValidation: true

  argo-workflows:
    controller:
      workflowDefaults:
        spec:
          serviceAccountName: workflows-default
    useDefaultArtifactRepo: true
    useStaticCredentials: false
    artifactRepository:
      archiveLogs: true
      s3:
        accessKeySecret: {}
        secretKeySecret: {}
        insecure: false
        bucket: csdp-lr
        endpoint: s3.amazonaws.com #change as needed
        region: us-east-1 #change as needed
        roleARN: arn:aws:iam::835357571861:role/lr-s3-wks
    server:
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::835357571861:role/workflow-lr1"
    workflow:
      serviceAccount:
        create: true
        name: workflows-default
        annotations:
          eks.amazonaws.com/role-arn: "arn:aws:iam::835357571861:role/workflow-lr1"
  argo-cd:
    configs:
      # ConfigMap for Config Management Plugins
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/config-management-plugins/
      # based on https://www.cloudadmins.org/argo-vault-plugin-avp/
      cmp:
        # -- Create the argocd-cmp-cm configmap
        create: true

        # -- Annotations to be added to argocd-cmp-cm configmap
        annotations:
          eks.amazonaws.com/role-arn: 'arn:aws:iam::835357571861:role/eksctl-lr1-cluster-ServiceRole-YRoHLZjmELAn'

        # -- Plugin yaml files to be added to argocd-cmp-cm
        plugins:
          argocd-vault-plugin:
            generate:
              command: ["/usr/local/bin/argocd-vault-plugin"]
              args: ["generate", "./"]

    ## Repo Server
    repoServer:
      # -- Additional containers to be added to the repo server pod
      ## Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/config-management-plugins/
      ## Note: Supports use of custom Helm templates
      extraContainers:
        - name: argocd-vault-plugin
          command:
            - "/var/run/argocd/argocd-cmp-server"
          image: alpine/k8s:1.24.16
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          env:
            - name: AVP_TYPE
              value: awssecretsmanager
            - name: AWS_REGION
              value: us-east-1
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              subPath: argocd-vault-plugin.yaml
              name: argocd-cmp-cm
            - name: custom-tools
              mountPath: /usr/local/bin/argocd-vault-plugin
              subPath: argocd-vault-plugin
            # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
            # mitigate path traversal attacks.
            - mountPath: /tmp
              name: cmp-tmp
      # -- Init containers to add to the repo server pods
      initContainers:
        - name: get-avp
          image: alpine:3.8
          env:
          - name: AVP_VERSION
            value: 1.14.0
          command: [sh, -c]
          args:
            - |
              wget -O argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64
              chmod +x argocd-vault-plugin
              mv argocd-vault-plugin /custom-tools/
              ls -ail /custom-tools/
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools

      # -- Additional volumes to the repo server pod
      volumes:
      - name: custom-tools
        emptyDir: {}
      - name: cmp-tmp
        emptyDir: {}
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      # -- Additional volumeMounts to the repo server main container
      volumeMounts: {}
